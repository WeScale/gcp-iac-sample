apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-deployment
  namespace: webservices
  labels:
    k8s-app: ws-deployment
  annotations:
    sidecar.jaegertracing.io/inject: "true"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webservice
      k8s-app: ws-deployment
  template:
    metadata:
      labels:
        app: webservice
        k8s-app: ws-deployment
    spec:
      containers:
      - name: webservice
        image: eu.gcr.io/slavayssiere-sandbox/api-test:0.0.9
        imagePullPolicy: Always
        env:
        - name: PREFIX_PATH
          value: /
        - name: JAEGER_SERVICE_NAME
          value: app-test
        - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
          value: http://localhost:5778/
        - name: MYSQL_HOST
          value: "bdd.dev-2.internal.lp"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          value: "user1-dev-2"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-secrets-user1
              key: password
        - name: MYSQL_DATABASE
          value: "my-database"
        ports:
        - containerPort: 8080
          name: rest-api-ws
        resources:
          limits:
            memory: "40Mi"
            cpu: "20m"
          requests:
            memory: "40Mi"
            cpu: "20m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ws-service
  namespace: webservices
  labels:
    app: webservice
    k8s-app: ws-deployment
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: rest-api-ws
  selector:
    app: webservice
    k8s-app: ws-deployment
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
  namespace: webservices
  annotations:
    kubernetes.io/ingress.class: public-ingress
spec:
  rules:
  - host: dev-2.gcp-wescale.slavayssiere.fr
    http:
      paths:
      - path: /
        backend:
          serviceName: ws-service
          servicePort: 8080